var PayWithAmazon =
/******/ (function(modules) { // webpackBootstrap
/******/  // The module cache
/******/  var installedModules = {};
/******/
/******/  // The require function
/******/  function __webpack_require__(moduleId) {
/******/
/******/    // Check if module is in cache
/******/    if(installedModules[moduleId]) {
/******/      return installedModules[moduleId].exports;
/******/    }
/******/    // Create a new module (and put it into the cache)
/******/    var module = installedModules[moduleId] = {
/******/      i: moduleId,
/******/      l: false,
/******/      exports: {}
/******/    };
/******/
/******/    // Execute the module function
/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/    // Flag the module as loaded
/******/    module.l = true;
/******/
/******/    // Return the exports of the module
/******/    return module.exports;
/******/  }
/******/
/******/
/******/  // expose the modules object (__webpack_modules__)
/******/  __webpack_require__.m = modules;
/******/
/******/  // expose the module cache
/******/  __webpack_require__.c = installedModules;
/******/
/******/  // define getter function for harmony exports
/******/  __webpack_require__.d = function(exports, name, getter) {
/******/    if(!__webpack_require__.o(exports, name)) {
/******/      Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/    }
/******/  };
/******/
/******/  // define __esModule on exports
/******/  __webpack_require__.r = function(exports) {
/******/    if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/      Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/    }
/******/    Object.defineProperty(exports, '__esModule', { value: true });
/******/  };
/******/
/******/  // create a fake namespace object
/******/  // mode & 1: value is a module id, require it
/******/  // mode & 2: merge all properties of value into the ns
/******/  // mode & 4: return value when already ns object
/******/  // mode & 8|1: behave like require
/******/  __webpack_require__.t = function(value, mode) {
/******/    if(mode & 1) value = __webpack_require__(value);
/******/    if(mode & 8) return value;
/******/    if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/    var ns = Object.create(null);
/******/    __webpack_require__.r(ns);
/******/    Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/    if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/    return ns;
/******/  };
/******/
/******/  // getDefaultExport function for compatibility with non-harmony modules
/******/  __webpack_require__.n = function(module) {
/******/    var getter = module && module.__esModule ?
/******/      function getDefault() { return module['default']; } :
/******/      function getModuleExports() { return module; };
/******/    __webpack_require__.d(getter, 'a', getter);
/******/    return getter;
/******/  };
/******/
/******/  // Object.prototype.hasOwnProperty.call
/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/  // __webpack_public_path__
/******/  __webpack_require__.p = "/build/";
/******/
/******/
/******/  // Load entry module and return exports
/******/  return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PayWithAmazon; });\n/* harmony import */ var component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! component-emitter */ \"./node_modules/component-emitter/index.js\");\n/* harmony import */ var component_emitter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(component_emitter__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * Off Amazon Payments wrapper\n *\n * order of operations\n *\n *   button -> address book -> wallet -> consent\n *\n * example\n *\n *   new PayWithAmazon({\n *     sellerId: 'abc',\n *     clientId: 'xyz',\n *     button: { id: 'pay-with-amazon' },\n *     addressBook: { id: 'address-book' [, width: 400 [, height: 260]]},\n *     wallet: { id: 'wallet' [, width: 400 [, height: 260]]},\n *     consent: { id: 'consent' [, width: 400 [, height: 140]]},\n *   });\n *\n * @param {Object} opts\n * @param {String} opts.sellerId\n * @param {String} opts.clientId\n * @param {Boolean} opts.production Whether to use the production widgets (defaults to false)\n * @param {Object|String} opts.button if string, sets opts.button.id\n * @param {String} opts.button.id\n * @param {String} [opts.button.type] 'large' (default), 'small'\n * @param {String} [opts.button.color] 'Gold' (default), 'LightGray', 'DarkGray'\n * @param {Object|String} opts.wallet\n * @param {String} opts.wallet.id\n * @param {Number} [opts.wallet.width]\n * @param {Number} [opts.wallet.height]\n * @param {Object|String} [opts.addressBook]\n * @param {String} opts.addressBook.id\n * @param {Number} [opts.addressBook.width]\n * @param {Number} [opts.addressBook.height]\n * @param {Object|String} opts.consent\n * @param {String} opts.consent.id\n * @param {Number} [opts.consent.width]\n * @param {Number} [opts.consent.height]\n * @param {String} [opts.openedClass]\n * @param {String} [opts.region] 'us' (default), 'eu', 'uk'\n * @param {Array|String} [opts.authorizationScope] [] (default)\n */\n\nvar PayWithAmazon = /*#__PURE__*/function (_Emitter) {\n  _inherits(PayWithAmazon, _Emitter);\n\n  var _super = _createSuper(PayWithAmazon);\n\n  function PayWithAmazon(opts) {\n    var _this;\n\n    _classCallCheck(this, PayWithAmazon);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"version\", '2.0.1');\n\n    _this.configure(opts);\n\n    _this.billingAgreementId = null;\n    _this.consent = undefined;\n    _this.widgets = {};\n    _this._status = _this.status();\n    _this.setBillingAgreementId = _this.setBillingAgreementId.bind(_assertThisInitialized(_this));\n    _this.initWallet = _this.initWallet.bind(_assertThisInitialized(_this));\n    _this.initConsent = _this.initConsent.bind(_assertThisInitialized(_this));\n    _this.setConsent = _this.setConsent.bind(_assertThisInitialized(_this));\n    _this.error = _this.error.bind(_assertThisInitialized(_this));\n    _this.init = _this.init.bind(_assertThisInitialized(_this));\n\n    if ('OffAmazonPayments' in window) {\n      _this.init();\n    } else {\n      window.onAmazonLoginReady = _this.init;\n      var script = document.createElement('script');\n      script.src = _this.assetPath;\n      document.head.appendChild(script);\n    }\n\n    return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n  }\n\n  _createClass(PayWithAmazon, [{\n    key: \"configure\",\n\n    /**\n     * Configures the instance based on passed `opts`\n     *\n     * Throws errors if the opts are insufficient to configure the instance,\n     * and sets defaults for those not specified.\n     *\n     * See initializer for description of `opts`\n     */\n    value: function configure(opts) {\n      if (_typeof(opts) !== 'object') throw new Error('opts must be provided as an object.');\n      if (!opts.sellerId) throw new Error('opts.sellerId is required.');\n      if (!opts.clientId) throw new Error('opts.clientId is required.');\n      if (!opts.button) throw new Error('opts.button is required.');\n      if (!opts.wallet) throw new Error('opts.wallet is required.');\n      if (!opts.consent) throw new Error('opts.consent is required.');\n      if (typeof opts.button === 'string') opts.button = {\n        id: opts.button\n      };\n      if (typeof opts.wallet === 'string') opts.wallet = {\n        id: opts.wallet\n      };\n      if (typeof opts.consent === 'string') opts.consent = {\n        id: opts.consent\n      };\n      if (typeof opts.addressBook === 'string') opts.addressBook = {\n        id: opts.addressBook\n      };\n      if (typeof opts.authorizationScope === 'string') opts.authorizationScope = [opts.authorizationScope];\n\n      if (opts.button.kind === 'login') {\n        opts.button.type = opts.button.type === 'small' ? 'Login' : 'LwA';\n      } else {\n        opts.button.type = opts.button.type === 'small' ? 'Pay' : 'PwA';\n      }\n\n      opts.button.color = opts.button.color || 'Gold';\n\n      if (opts.wallet.width || opts.wallet.height) {\n        opts.wallet.dimensions = {\n          width: dimension(opts.wallet.width || 400),\n          height: dimension(opts.wallet.height || 260)\n        };\n      }\n\n      if (opts.consent.width || opts.consent.height) {\n        opts.consent.dimensions = {\n          width: dimension(opts.consent.width || 400),\n          height: dimension(opts.consent.height || 140)\n        };\n      }\n\n      if (opts.addressBook && (opts.addressBook.width || opts.addressBook.height)) {\n        opts.addressBook.dimensions = {\n          width: dimension(opts.addressBook.width || 400),\n          height: dimension(opts.addressBook.height || 260)\n        };\n      }\n\n      opts.production = typeof opts.production === 'boolean' ? opts.production : false;\n      opts.openedClass = opts.openedClass || 'open';\n      opts.authorizationScope = opts.authorizationScope || [];\n      this.config = opts;\n    }\n    /**\n     * Initialized the Amazon plugin\n     *\n     * Sets the client ID then waits for the widget classes to load\n     * before initializing the login button.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      window.amazon.Login.setClientId(this.config.clientId);\n      var self = this;\n      var pollId = setInterval(poll, 200);\n\n      function poll() {\n        if (!window.OffAmazonPayments.Button) return;\n        clearTimeout(pollId);\n        self.initButton();\n      }\n    }\n    /**\n     * Returns an object describing the customer state\n     *\n     * @return {Object} customer state\n     */\n\n  }, {\n    key: \"status\",\n    value: function status() {\n      var id = this.billingAgreementId;\n      var consent = this.consent;\n      var status = {};\n\n      if (!id) {\n        status.error = 'Billing agreement ID has not been set.';\n      }\n\n      if (consent !== undefined) {\n        status.consent = consent;\n      }\n\n      if (consent === undefined) {\n        status.error = 'Billing consent not yet given.';\n      } else if (!consent) {\n        status.error = 'Billing consent not given.';\n      }\n\n      if (!status.error) {\n        status.id = id;\n      }\n\n      return status;\n    }\n    /**\n     * Emits the 'change' event if the customer status has changed\n     */\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      var status = this.status();\n\n      if (JSON.stringify(status) !== JSON.stringify(this._status)) {\n        this._status = status;\n        this.emit('change', status);\n      }\n    }\n    /**\n     * Initializes the login button\n     */\n\n  }, {\n    key: \"initButton\",\n    value: function initButton() {\n      var self = this;\n      var type = this.config.button.type;\n      var color = this.config.button.color;\n      var defaultScope = ['profile', 'payments:widget', 'payments:shipping_address'];\n      var scope = defaultScope.concat(this.config.authorizationScope).join(' ');\n      this.widgets.button = new window.OffAmazonPayments.Button(this.config.button.id, this.config.sellerId, {\n        type: type,\n        color: color,\n        authorization: function authorization() {\n          var opts = {\n            scope: scope,\n            popup: true\n          };\n          window.amazon.Login.authorize(opts, function (res) {\n            if (res.error) return self.error(res.error);\n            self.emit('login', res);\n            self.initAddressBook();\n          });\n        },\n        onError: this.error\n      });\n    }\n    /**\n     * Initializes the Address Book widget\n     */\n\n  }, {\n    key: \"initAddressBook\",\n    value: function initAddressBook() {\n      var self = this;\n      if (!this.config.addressBook) return this.initWallet();\n      var opts = {\n        agreementType: 'BillingAgreement',\n        sellerId: this.config.sellerId,\n        onReady: function onReady(ref) {\n          self.emit('ready.addressBook');\n          self.setBillingAgreementId(ref);\n        },\n        onAddressSelect: this.initWallet,\n        design: design(this.config.addressBook),\n        onError: this.error\n      };\n      this.widgets.addressBook = new window.OffAmazonPayments.Widgets.AddressBook(opts);\n      this.widgets.addressBook.bind(this.config.addressBook.id);\n      this.opened(this.config.addressBook.id);\n    }\n    /**\n     * Initializes the wallet widget\n     */\n\n  }, {\n    key: \"initWallet\",\n    value: function initWallet() {\n      var self = this;\n      var opts = {\n        amazonBillingAgreementId: this.billingAgreementId,\n        sellerId: this.config.sellerId,\n        design: design(this.config.wallet),\n        onReady: function onReady(ref) {\n          self.emit('ready.wallet');\n\n          if (!self.billingAgreementId) {\n            self.setBillingAgreementId(ref);\n          }\n        },\n        onPaymentSelect: function onPaymentSelect() {\n          self.initConsent();\n          self.check();\n        },\n        onError: this.error\n      };\n\n      if (!this.billingAgreementId) {\n        opts.agreementType = 'BillingAgreement';\n      }\n\n      this.widgets.wallet = new window.OffAmazonPayments.Widgets.Wallet(opts);\n      this.widgets.wallet.bind(this.config.wallet.id);\n      this.opened(this.config.wallet.id);\n    }\n    /**\n     * Initializes the consent widget\n     */\n\n  }, {\n    key: \"initConsent\",\n    value: function initConsent() {\n      var self = this;\n      var opts = {\n        amazonBillingAgreementId: this.billingAgreementId,\n        sellerId: this.config.sellerId,\n        design: design(this.config.consent),\n        onReady: function onReady(consentStatus) {\n          self.emit('ready.consent');\n          self.setConsent(consentStatus);\n        },\n        onConsent: this.setConsent,\n        onError: this.error\n      };\n      this.widgets.consent = new window.OffAmazonPayments.Widgets.Consent(opts);\n      this.widgets.consent.bind(this.config.consent.id);\n      this.opened(this.config.consent.id);\n    }\n    /**\n     * Sets the billingAgreementId based on a widgit init reference\n     */\n\n  }, {\n    key: \"setBillingAgreementId\",\n    value: function setBillingAgreementId(ref) {\n      this.billingAgreementId = ref.getAmazonBillingAgreementId();\n      this.check();\n    }\n    /**\n     * Sets consent state based on an Amazon ConsentStatus\n     */\n\n  }, {\n    key: \"setConsent\",\n    value: function setConsent(consentStatus) {\n      if (typeof consentStatus.getConsentStatus === 'undefined') return;\n      this.consent = consentStatus.getConsentStatus() === 'true';\n      this.check();\n    }\n    /**\n     * Adds a class to opened widget containers\n     */\n\n  }, {\n    key: \"opened\",\n    value: function opened(id) {\n      var elem = document.getElementById(id);\n      if (elem) elem.className = elem.className + ' ' + this.config.openedClass;\n    }\n    /**\n     * Handles errors, logging to console and emitting via the 'error' event\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var error = {\n        code: err.getErrorCode(),\n        message: err.getErrorMessage()\n      };\n\n      if (console) {\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(error, this.error);\n        }\n\n        console.error(error);\n      }\n\n      this.emit('error', error);\n    }\n  }, {\n    key: \"assetPath\",\n    get: function get() {\n      var _this$config = this.config,\n          production = _this$config.production,\n          region = _this$config.region;\n      var env = production ? '' : '/sandbox';\n\n      if (region === 'eu') {\n        return \"https://static-eu.payments-amazon.com/OffAmazonPayments/eur\".concat(env, \"/lpa/js/Widgets.js?sellerId=\").concat(this.config.sellerId);\n      } else if (region === 'uk') {\n        return \"https://static-eu.payments-amazon.com/OffAmazonPayments/gbp\".concat(env, \"/lpa/js/Widgets.js?sellerId=\").concat(this.config.sellerId);\n      } else {\n        return \"https://static-na.payments-amazon.com/OffAmazonPayments/us\".concat(env, \"/js/Widgets.js?sellerId=\").concat(this.config.sellerId);\n      }\n    }\n  }]);\n\n  return PayWithAmazon;\n}(component_emitter__WEBPACK_IMPORTED_MODULE_0___default.a);\n/**\n * Given a number or string, returns a properly-formatted dimension string\n *\n * @param {Number|String} dim\n * @returns {String}\n */\n\n\n\n\nfunction dimension(dim) {\n  dim = dim + '';\n  return dim + (isNaN(parseInt(dim.charAt(dim.length - 1), 10)) ? '' : 'px');\n}\n/**\n * Given a widget configuration, returns a properly-formatted design spec\n *\n * @param {Object} widget Widget options hash\n */\n\n\nfunction design(widget) {\n  if (widget.dimensions) {\n    return {\n      size: widget.dimensions\n    };\n  } else {\n    return {\n      designMode: 'responsive'\n    };\n  }\n}\n\n//# sourceURL=webpack://PayWithAmazon/./index.js?");

/***/ }),

/***/ "./node_modules/component-emitter/index.js":
/*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (true) {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack://PayWithAmazon/./node_modules/component-emitter/index.js?");

/***/ })

/******/ })["default"];
